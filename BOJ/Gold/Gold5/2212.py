'''
2212. 센서

한국도로공사는 고속도로의 유비쿼터스화를 위해 고속도로 위에 N개의 센서를 설치하였다. 
문제는 이 센서들이 수집한 자료들을 모으고 분석할 몇 개의 집중국을 세우는 일인데, 예산상의 문제로, 고속도로 위에 최대 K개의 집중국을 세울 수 있다고 한다.

각 집중국은 센서의 수신 가능 영역을 조절할 수 있다. 집중국의 수신 가능 영역은 고속도로 상에서 연결된 구간으로 나타나게 된다. 
N개의 센서가 적어도 하나의 집중국과는 통신이 가능해야 하며, 집중국의 유지비 문제로 인해 각 집중국의 수신 가능 영역의 길이의 합을 최소화해야 한다.

편의를 위해 고속도로는 평면상의 직선이라고 가정하고, 센서들은 이 직선 위의 한 기점인 원점으로부터의 정수 거리의 위치에 놓여 있다고 하자. 
따라서, 각 센서의 좌표는 정수 하나로 표현된다. 이 상황에서 각 집중국의 수신 가능영역의 거리의 합의 최솟값을 구하는 프로그램을 작성하시오. 
단, 집중국의 수신 가능영역의 길이는 0 이상이며 모든 센서의 좌표가 다를 필요는 없다.
'''
import sys
input = sys.stdin.readline

# 센서의 개수 N
N = int(input())
# 집중국의 개수 K
K = int(input())
# 센서의 좌표
sensors = list(map(int, input().split()))
sensors.sort()

# 센서 간의 거리 배열
sensor_dist = []
for i in range(N-1):
    sensor_dist.append(sensors[i+1] - sensors[i])

# 센서 간의 거리가 먼 순서대로 끊어가면서 범위를 설정하면 된다.
sensor_dist.sort()
if sensor_dist:
    for _ in range(K-1):
        sensor_dist.pop()
    print(sum(sensor_dist))
else:
    print(0)

'''
[입력]
6
2
1 6 9 3 6 7

[출력]
5
'''