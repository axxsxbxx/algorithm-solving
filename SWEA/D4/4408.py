'''
4408. 자기 방으로 돌아가기

고등학교 학생들이 학교에서 수련회를 갔다. 수련회에 간 학생들은 친구들과 음주가무를 즐기다가 밤 12시가 되자 조교들의 눈을 피해 자기방으로 돌아가려고 한다.
제 시간에 자기방으로 돌아가지 못한 학생이 한 명이라도 발견되면 큰일나기 때문에 최단 시간에 모든 학생이 자신의 방으로 돌아가려고 한다.
모든 학생들은 현재 위치에서 자신의 방으로 돌아가려고 하는데, 
만약 두 학생이 자기방으로 돌아가면서 지나는 복도의 구간이 겹치면 두 학생은 동시에 돌아갈 수 없다.

예를 들어 (방1 -> 4) 와 (방3 -> 6) 은 복도 구간이 겹치므로 한 사람은 기다렸다가 다음 차례에 이동해야 한다. 
이동하는 데에는 거리에 관계없이 단위 시간이 걸린다고 하자.

각 학생들의 현재 방 위치와 돌아가야 할 방의 위치의 목록이 주어질 때, 
최소 몇 단위시간만에 모든 학생들이 이동할 수 있는지를 구하시오.
'''
T = int(input())

for t in range(1, T+1):
    N = int(input())
    room = [0] * 200
    for _ in range(N):
        start, end = map(int, input().split())
        if start > end:
            start, end = end, start
        for i in range((start-1)//2, (end-1)//2 + 1):
            room[i] += 1
    print('#%d %d' % (t, max(room)))
'''
[입력]
3  
4  
10 20 
30 40
50 60
70 80
2 
1 3
2 200
3
10 100
20 80
30 50

[출력]
#1 1
#2 2
#3 3
'''